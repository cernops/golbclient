---
image: gitlab-registry.cern.ch/linuxsupport/cc7-base:20180516
stages:
  - build
  - test
  - benchmark
  - binary
  - build_rpm
  - koji_scratch
  - koji
  - deploy_qa
  - deploy_prod


before_script:
  - yum -y install --exclude python2-libcomps gcc krb5-workstation rpm-build rpmdevtools
  - mkdir -p /go/src/gitlab.cern.ch/lb-experts
  - if [ -d /builds ] ;  then  export PREFIX=/builds  ;  fi
  - ln -s $PREFIX/lb-experts/golbclient /go/src/gitlab.cern.ch/lb-experts/golbclient
  - yum -y install git
  - cd /go/src/gitlab.cern.ch/lb-experts/golbclient
  - export SPEC=$(ls *spec)
  - RELEASE=`grep 'Release = "' lbclient.go | awk -F \" '{print $2}'`
  - VERSION=`grep 'Version = "' lbclient.go | awk -F \" '{print $2}'`
  - cat $SPEC | sed "s/#REPLACE_BY_VERSION#/$VERSION/" > $SPEC.tmp
  - cat $SPEC.tmp | sed "s/#REPLACE_BY_RELEASE#/$RELEASE/" > $SPEC
  - export PKG=$(rpm -q --specfile $SPEC --queryformat "%{name}-%{version}\n" | head -n 1)
  - export PKG_REL6=$(rpm -q --define "dist .ai6" --specfile $SPEC --queryformat "%{name}-%{version}-%{release}\n" | head -n 1)
  - export PKG_REL7=$(rpm -q --define "dist .ai7" --specfile $SPEC --queryformat "%{name}-%{version}-%{release}\n" | head -n 1)
  - export PKG_REL8=$(rpm -q --define "dist .lb8" --specfile $SPEC --queryformat "%{name}-%{version}-%{release}\n" | head -n 1)
 # [lemon-cli]
  - ln -s $PREFIX/lb-experts/golbclient/scripts/lemon-cli /usr/sbin/lemon-cli
 # [collectdctl]
  - ln -s $PREFIX/lb-experts/golbclient/scripts/collectdctl /usr/bin/collectdctl

.installGo09: &installGo09 |
  mkdir /go09
  curl https://dl.google.com/go/go1.9.7.linux-amd64.tar.gz  | tar -zxC /go09
  ln -s /go09/go/bin/go /usr/bin/go09
  export GOPATH=/go
  go09 get ./...

.installGo10: &installGo10 |
  mkdir /go10
  curl https://dl.google.com/go/go1.10.5.linux-amd64.tar.gz  | tar -zxC /go10
  ln -s /go10/go/bin/go /usr/bin/go10
  export GOPATH=/go
  go10 get ./...

.installGo11: &installGo11 |
  mkdir /go11
  curl https://dl.google.com/go/go1.11.12.linux-amd64.tar.gz  | tar -zxC /go11
  ln -s /go11/go/bin/go /usr/bin/go11
  export GOPATH=/go
  go11 get ./...

.installKoji: &installKoji |
  yum -y install koji
  echo $LBBUILD_PASSWORD | kinit lbbuild@CERN.CH
  klist
  printf "[koji]\nserver = https://kojihub.cern.ch/kojihub\nweburl = https://koji.cern.ch/koji\ntopurl = https://koji.cern.ch/kojifiles\nkrb_canon_host = no\nkrb_rdns = False" > .koji



.openTestPorts: &openTestPorts |
  yum install iproute nmap-ncat -y
  nc -l      -p           22        &
  nc -l      -p           21        &
  nc -l      -p           2811      &
  nc -l      -p           80        &
  nc -l      -p           922       &
  nc -l -u   -p           922       &
  nc -l  127.0.0.1 202              &
  nc -l  ::1 202               -6   &
  sleep 1
  cat /proc/net/tcp
  cat /proc/net/tcp6

build-go09:
  stage: build
  script:
    - *installGo09
    - go09 build -race

build-go10:
  stage: build
  script:
    - *installGo10
    - go10 build -race

build-go11:
  stage: build
  script:
    - *installGo11
    - go11 build -race ./...

test-go09:
  stage: test
  script:
    - *installGo09
    - *openTestPorts
    - go09 test -v -cover ./tests/ci/...
    - go09 test -race ./tests/ci/...

test-go10:
  stage: test
  script:
    - *installGo10
    - *openTestPorts
    - go10 test -v -cover ./tests/ci/...
    - go10 test -race ./tests/ci/...

test-go11:
  stage: test
  script:
    - *installGo11
    - *openTestPorts
    - go11 test -v -cover ./tests/ci/...
    - go11 test -race ./tests/ci/...

bench-go09:
  stage: benchmark
  script:
    - *installGo09
    - go09 test ./tests/benchmarking/... -bench=. -benchmem
    - go09 test ./tests/benchmarking/... -bench=. -benchmem -race

bench-go10:
  stage: benchmark
  script:
    - *installGo10
    - go10 test ./tests/benchmarking/... -bench=. -benchmem
    - go10 test ./tests/benchmarking/... -bench=. -benchmem -race

bench-go11:
  stage: benchmark
  script:
    - *installGo11
    - go11 test ./tests/benchmarking/... -bench=. -benchmem
    - go11 test ./tests/benchmarking/... -bench=. -benchmem -race

test-lbclient-binary:
  stage: binary
  script:
    - *installGo11
    - echo "load constant 50000" > /usr/local/etc/lbclient.conf
    - echo "lbalias=test.cern.ch" > /usr/local/etc/lbaliases
    - cd /builds/lb-experts/golbclient
    - go11 run lbclient.go | grep -Pzo ".1.3.6.1.4.1.96.255.1(\n)integer(\n)50000" | if [ $(wc -l) -eq 3 ]; then true; else false; fi
    - echo "lbalias=test2.cern.ch" >> /usr/local/etc/lbaliases
    - echo "load constant 40000" >> /usr/local/etc/lbclient.conf.test2.cern.ch
    - go11 run lbclient.go | grep -Pzo ".1.3.6.1.4.1.96.255.1(\n)string(\n)test2.cern.ch=40000,test.cern.ch=50000" | if [ $(wc -l) -eq 3 ]; then true; else false; fi

build_rpm:
  stage: build_rpm
  script:
    - *installGo11
    - cd $PREFIX/lb-experts/golbclient
    - go11 mod vendor
    - mkdir SOURCES version
    - tar cvf SOURCES/$PKG.tg  --exclude SOURCES --exclude .git --exclude .koji --exclude .gitlab-ci.yml --exclude go.mod --exclude go.sum --transform "s||$PKG/|" .
    - gzip -c SOURCES/$PKG.tg > SOURCES/$PKG.tgz
    - rm -rf SOURCES/$PKG.tg
    - rpmbuild -bs --define "_topdir $(pwd)" -D "dist .ai7" $SPEC
    - rpmbuild -bs --define "_topdir $(pwd)" -D "dist .ai6" $SPEC
    - rpmbuild -bs --define "_topdir $(pwd)" -D "dist .lb8" $SPEC
  artifacts:
    paths:
      - SRPMS/
    expire_in: 1 week


kojicheck:
  stage: koji_scratch
  script:
    - *installKoji
    - echo "Checking if $PKG_REL exists"
    - if koji --config=.koji search -r build $PKG | egrep  "$PKG_REL6|$PKG_REL7" ; then exit 1; fi
  allow_failure: true

kojiscratch:
  stage: koji_scratch
  script:
    - *installKoji
    - for data in "$KOJI_TARGET ${PKG_REL7}" "ai6 ${PKG_REL6}" "lb8 ${PKG_REL8}";
      do my_array=($data);
      echo "koji build --wait --scratch ${my_array[0]} SRPMS/${my_array[1]}.src.rpm";
      koji --config=.koji build --wait --scratch ${my_array[0]}  SRPMS/${my_array[1]}.src.rpm ;
      done

koji:
  stage: koji
  script:
    - *installKoji
    - for data in "$KOJI_TARGET ${PKG_REL7}" "ai6 ${PKG_REL6}" "lb8 ${PKG_REL8}";
      do my_array=($data);
      echo "koji build --wait ${my_array[0]} SRPMS/${my_array[1]}.src.rpm";
      koji --config=.koji build --wait ${my_array[0]}  SRPMS/${my_array[1]}.src.rpm ;
      done
  only:
    - tags

tag_qa:
  stage: deploy_qa
  when: manual
  only:
    - tags
  script:
    - *installKoji
    - koji --config=.koji tag-pkg ${KOJI_TARGET}-qa ${PKG_REL7}
    - koji --config=.koji tag-pkg ai6-qa ${PKG_REL6}
    - koji --config=.koji tag-pkg lb8-qa ${PKG_REL8}
  allow_failure: false

tag_prod:
  stage: deploy_prod
  when: manual
  only:
    - tags
  script:
    - *installKoji
    - koji --config=.koji tag-pkg ${KOJI_TARGET}-stable ${PKG_REL7}
    - koji --config=.koji tag-pkg ai6-stable ${PKG_REL6}
    - koji --config=.koji tag-pkg lb8-stable ${PKG_REL8}



